<div class="question-thread p-top-big" data-score="<%= question.score %>" data-time="<%= question.elapsed_time %>" >
  <% if current_admin %>
      <div class="admin-actions">
        <%= link_to comment_path(question), method: "delete", remote: true, :class => "admin-delete", data: {confirm: "yo you sure?"} do  %>
            <div class="delete-thread red">
              Delete Thread
            </div>
        <% end %>
        <%= link_to edit_comment_path(question) do  %>
            <div class="delete-thread green">
              Edit Question
            </div>
        <% end %>
      </div>
  <% end %>

  <div class="question p-vert flex-parent">
      <div class="question-left no-mobile">
          <%= image_tag question.user.avatar_url, :class => "comment-pic" %>
      </div>
      <div class="question-body bold">
          <%= question.body %>
      </div>
      <% if current_user && question.upvoted_by?(current_user) %>
          <div class="upvote-container">
              <%= link_to comment_upvote_path(question), remote: true, :class => "upvote-link active" do %>
                  <%= image_tag "upvoteclick.svg", :class => "upvote-arrow svg" %>
                  <div class="upvote-value white">
                      <%= question.score %>
                  </div>
              <% end %>
          </div>
      <% else %>
          <div class="upvote-container">
              <%= link_to comment_upvote_path(question), remote: true, :class => "upvote-link inactive" do %>
                  <%= image_tag "upvoteempty.svg", :class => "upvote-arrow svg" %>
                  <div class="upvote-value grey">
                      <%= question.score %>
                  </div>
              <% end %>
          </div>
      <% end %>
  </div>
  <div class="question-timestamp grey p-vert-big">
      <%= question.timestamp %>
  </div>
  <% if current_mentor %>
      <div class="mentor-reply-form">
          <%= form_for Comment.new, remote: true, html: {:class => "reply-form flex"} do |f| %>
              <%= image_tag current_avatar, :class => "comment-pic" %>
              <%= f.hidden_field :comment_type, value: "reply" %>
              <div class="posting">Posting your answer...</div>
              <%= f.hidden_field :ama_id, value: ama.id %>
              <%= f.hidden_field :parent_id, value: question.id %>
              <%= f.text_area :body, :class => "m-left-big reply-box inline m-answer-field", :placeholder => "Answer this question..." %>
              <%= f.submit "Post", id: "submit-reply", :class => "btn red-btn hidden" %>
          <% end %>
      </div>
  <% end %>

  <% question.children.each do |reply| %>
      <%= render partial: "comments/reply", locals: {reply: reply} %>
      <% reply.children.each do |comment| %>
          <%= render partial: "comments/comment", locals: {comment: comment} %>
      <% end %>
          <div class="user-comment-form">
              <%= form_for Comment.new, remote: true, html: {:class => "comment-form flex"} do |f| %>
                  <%= image_tag current_avatar, :class => "comment-pic" %>
                  <%= f.hidden_field :comment_type, value: "comment" %>
                  <%= f.hidden_field :ama_id, value: ama.id %>
                  <%= f.hidden_field :parent_id, value: reply.id %>
                  <%= f.text_area :body, :class => "m-left-big reply-box inline", :placeholder => "Reply to this answer..." %>
                  <%= f.submit "Post", id: "submit-reply", :class => "btn red-btn hidden" %>
              <% end %>
          </div>
  <% end %>
</div>

<script>
  $('img.svg').each(function(){
    var $img = $(this);
    var imgID = $img.attr('id');
    var imgClass = $img.attr('class');
    var imgURL = $img.attr('src');

    $.get(imgURL, function(data) {
        // Get the SVG tag, ignore the rest
        var $svg = $(data).find('svg');

        // Add replaced image's ID to the new SVG
        if(typeof imgID !== 'undefined') {
            $svg = $svg.attr('id', imgID);
        }
        // Add replaced image's classes to the new SVG
        if(typeof imgClass !== 'undefined') {
            $svg = $svg.attr('class', imgClass+' replaced-svg');
        }
        // Remove any invalid XML tags as per http://validator.w3.org
        $svg = $svg.removeAttr('xmlns:a');
        // Replace image with new SVG
        $img.replaceWith($svg);
    }, 'xml');
  });
</script>